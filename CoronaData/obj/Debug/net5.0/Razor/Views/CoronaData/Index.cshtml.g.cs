#pragma checksum "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "561505113fbd60d840a04a7556879c1b06ec2909"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CoronaData_Index), @"mvc.1.0.view", @"/Views/CoronaData/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/Peter/Projects/CoronaData/CoronaData/Views/_ViewImports.cshtml"
using CoronaData;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
using System.Linq;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"561505113fbd60d840a04a7556879c1b06ec2909", @"/Views/CoronaData/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b0845d68a38066709bba928dee591ea33a6343af", @"/Views/_ViewImports.cshtml")]
    public class Views_CoronaData_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<CoronaData.Models.DataVisualisationModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 4 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
  
    //AG - 14 days
    var agDates_14days = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Last14DaysAG.Select(x => x.DateString).ToList());
    var agTotalCounts_14days = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Last14DaysAG.Select(x => x.AgTotalCount).ToList());
    var agPositiveCounts_14days = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Last14DaysAG.Select(x => x.AgPosCount).ToList());

    //PCR - 14 days
    var pcrDates_14days = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Last14DaysPCR.Select(x => x.DateString).ToList());
    var pcrTotalCounts_14days = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Last14DaysPCR.Select(x => x.PcrTotalCount).ToList());
    var pcrPositiveCounts_14days = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Last14DaysPCR.Select(x => x.PcrPosCount).ToList());

    //PCR + AG - 14 days
    var pcrAgDates_14days = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Last14DaysPCRAG.Select(x => x.DateString).ToList());
    var pcrAgTotalCounts_14days = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Last14DaysPCRAG.Select(x => x.PcrAgTotalCount).ToList());
    var pcrAgPositiveCounts_14days = Newtonsoft.Json.JsonConvert.SerializeObject(Model.Last14DaysPCRAG.Select(x => x.PcrAgPosCount).ToList());

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""chart-container"">
    <canvas id=""ag14days"" style=""width:100%; height:500px""></canvas>
</div>

<div class=""chart-container"">
    <canvas id=""pcr14days"" style=""width:100%; height:500px""></canvas>
</div>

<div class=""chart-container"">
    <canvas id=""pcrAg14days"" style=""width:100%; height:500px""></canvas>
</div>

<script type=""text/javascript"">
    $(function () {

    var chartName = ""pcr14days"";
        var pcr14days = document.getElementById(chartName).getContext('2d');
        var dataPcr14Days = {
                labels: ");
#nullable restore
#line 39 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
                   Write(Html.Raw(pcrDates_14days));

#line default
#line hidden
#nullable disable
            WriteLiteral(",\n                datasets: [{\n                    label: \"PCR testy - celkovy pocet\",\n                    order: 1,\n                    borderWidth: 1,\n                    data: ");
#nullable restore
#line 44 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
                     Write(Html.Raw(pcrTotalCounts_14days));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                    },\n                    {\n                    label: \"PCR testy - pocet pozitivnych\",\n                    order: 2,\n                    type: \'line\',\n                    data: ");
#nullable restore
#line 50 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
                     Write(Html.Raw(pcrPositiveCounts_14days));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    }]
            };

var optionsPcr14Days = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: ""rgba(255,99,164,0.2)""
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

        var pcr14days = new Chart(pcr14days, {
                options: optionsPcr14Days,
                data: dataPcr14Days,
                type:'bar'

            });
        });
</script>

<script type=""text/j");
            WriteLiteral("avascript\">\n    $(function () {\n\n    var chartName = \"ag14days\";\n        var ag14days = document.getElementById(chartName).getContext(\'2d\');\n        var dataAg14Days = {\n                labels: ");
#nullable restore
#line 94 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
                   Write(Html.Raw(agDates_14days));

#line default
#line hidden
#nullable disable
            WriteLiteral(",\n                datasets: [{\n                    label: \"AG testy - celkovy pocet\",\n                    order: 1,\n                    borderWidth: 1,\n                    data: ");
#nullable restore
#line 99 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
                     Write(Html.Raw(agTotalCounts_14days));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                    },\n                    {\n                    label: \"AG testy - pocet pozitivnych\",\n                    order: 2,\n                    type: \'line\',\n                    data: ");
#nullable restore
#line 105 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
                     Write(Html.Raw(agPositiveCounts_14days));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    }]
            };

var optionsAg14Days = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: ""rgba(255,99,164,0.2)""
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

        var ag14days = new Chart(ag14days, {
                options: optionsAg14Days,
                data: dataAg14Days,
                type:'bar'

            });
        });
</script>

<script type=""text/javasc");
            WriteLiteral("ript\">\n    $(function () {\n\n    var chartName = \"pcrAg14days\";\n        var pcrAg14days = document.getElementById(chartName).getContext(\'2d\');\n        var dataPcrAg14Days = {\n                labels: ");
#nullable restore
#line 149 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
                   Write(Html.Raw(pcrAgDates_14days));

#line default
#line hidden
#nullable disable
            WriteLiteral(",\n                datasets: [{\n                    label: \"PCR + AG testy - celkovy pocet\",\n                    order: 1,\n                    borderWidth: 1,\n                    data: ");
#nullable restore
#line 154 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
                     Write(Html.Raw(pcrAgTotalCounts_14days));

#line default
#line hidden
#nullable disable
            WriteLiteral("\n                    },\n                    {\n                    label: \"PCR + AG testy - pocet pozitivnych\",\n                    order: 2,\n                    type: \'line\',\n                    data: ");
#nullable restore
#line 160 "/Users/Peter/Projects/CoronaData/CoronaData/Views/CoronaData/Index.cshtml"
                     Write(Html.Raw(pcrAgPositiveCounts_14days));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                    }]
            };

var optionsPcrAg14Days = {
                maintainAspectRatio: false,
                scales: {
                    yAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: ""rgba(255,99,164,0.2)""
                        }
}],
                    xAxes: [{
                        ticks: {
                            min: 0,
                            beginAtZero: true
                        },
                        gridLines: {
                            display: false
                        }
                    }]
                }
            };

        var pcrAg14days = new Chart(pcrAg14days, {
                options: optionsPcrAg14Days,
                data: dataPcrAg14Days,
                type:'bar'

            });
        });
</script>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<CoronaData.Models.DataVisualisationModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
